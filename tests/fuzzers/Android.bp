//
// Copyright (C) 2020 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package {
    // See: http://go/android-license-faq
    // A large-scale-change added 'default_applicable_licenses' to import
    // all of the 'license_kinds' from "frameworks_native_license"
    // to get the below license kinds:
    //   SPDX-license-identifier-Apache-2.0
    default_applicable_licenses: ["frameworks_native_license"],
}

cc_defaults {
    name: "binder_fuzz_defaults",
    host_supported: true,
    cflags: [
        "-Wall",
        "-Werror",
    ],
    shared_libs: [
        "libbinder",
        "libutils",
        "libbase",
    ],
    target: {
        darwin: {
            enabled: false,
        }
    }
}

cc_fuzz {
    name: "binder_binderFuzz",
    defaults: ["binder_fuzz_defaults"],
    srcs: ["BinderFuzz.cpp"],
}

cc_fuzz {
    name: "binder_bpBinderFuzz",
    defaults: ["binder_fuzz_defaults"],
    host_supported: false,
    srcs: ["BpBinderFuzz.cpp"],
}

cc_fuzz {
    name: "binder_persistableBundleFuzz",
    defaults: ["binder_fuzz_defaults"],
    srcs: ["PersistableBundleFuzz.cpp"],
}

cc_fuzz {
    name: "binder_stabilityFuzz",
    defaults: ["binder_fuzz_defaults"],
    srcs: ["StabilityFuzz.cpp"],
}

cc_fuzz {
    name: "binder_statusFuzz",
    defaults: ["binder_fuzz_defaults"],
    srcs: ["StatusFuzz.cpp"],
}

cc_fuzz {
    name: "binder_textOutputFuzz",
    defaults: ["binder_fuzz_defaults"],
    srcs: ["TextOutputFuzz.cpp"],
}

cc_fuzz {
    name: "binder_bufferedTextOutputFuzz",
    include_dirs: [
        "frameworks/native/libs/binder",
    ],
    defaults: ["binder_fuzz_defaults"],
    srcs: ["BufferedTextOutputFuzz.cpp"],
}

cc_fuzz {
    name: "binder_memoryDealerFuzz",
    defaults: ["binder_fuzz_defaults"],
    srcs: ["MemoryDealerFuzz.cpp"],
}
